<html><head>
<style type="text/css">
body {
  font-family: sans-serif;
  font-size: 15px;
  overflow: hidden;
  cursor: default;
  padding: 0;
  margin: 0;
}
h1 {
  font-size: 37px;
  font-weight: normal;
  color: #405871;
  background-color: white;
  padding: 15px 25px;
  margin: -15px -15px 0 -15px;
  position: relative; /* for IE6 */
}
a:link, a:visited {
  color: #0066CC;
}
.options {
  padding-right: 8%;
  margin-left: 2em;
}
.options a {
  display: block;
  padding: 0.8em 1em;
  margin: 0.3em 0;
  /* for positioning of marker */
  position: relative;
  width: 100%;
}
.marker {
  position: absolute;
  right: 10px;
  font-size: 25px;
  top: 50%;
  margin-top: -17px;
}
a.button,
.options a {
  cursor: hand;
  border: 1px solid ButtonShadow;
  background-color: white;
  text-decoration: none;
}
a.button {
  padding: .3em .5em;
}
a.button,
a.button:visited,
.options a,
.options a:visited {
  color: #405871;
}
a.button:hover,
a.button:active,
.options a:hover,
.options a:active {
  background-color: #F8F8FF;
  border-color: #4774B2;
  color: #4774B2;
}
.options a:active {
  position: relative;
  left: 3px;
}
.options p {
  font-size: 80%;
  margin: 0.2em 1em;
}
.license {
  position: absolute;
  bottom: 1em;
  font-size: 80%;
}
.small {
  font-size: 90%;
}
.page {
  width: 600px; /* normally 100% within a 600px gui */
  height: 100%;
  position: relative;
  padding: 15px;
  display: none; /* overridden by script */
  /*background-color: #eee;*/
  background-color: ButtonFace;
  color: ButtonText;
}
.pager .page {
  padding: 15px 0;
  width: 100%; /* for demo in IE */
}
.nav {
  background-color: #405871;
  color: white;
  margin: 0 -15px;
  padding: .2em 20px;
}
.nav a, .nav a:visited {
  color: #ddd;
  text-decoration: none;
}
.nav a:hover {
  color: #fff;
}
.nav .current {
  color: white;
  font-weight: bold;
  cursor: default;
}
.warning {
  display: none;
  background-color: #fee;
  color: #800;
  border: 1px solid #800;
  padding: 0.5em;
  margin: -0.5em 0 1em;
}
.textbox {
  border: 1px solid ButtonShadow;
  padding: 0 0.4em;
  height: 29px;
  line-height: 27px;
  vertical-align: top;
  margin-top: 9px;
}
#installdir, #startmenu {
  width: 70%;
}
#installdir_browse, #startmenu_browse, #startmenu_del {
  height: 28px;
  margin-top: 10px;
}
label {
  padding: 5px;
  display: block;
  width: 90%;
}
label.indent {
  padding-left: 30px;
}
label p {
  font-size: 85%;
  margin: .3em 25px;
  color: #405871;
}
#install_button, #next-button {
  position: absolute;
  top: 250px;
  right: 5px;
  width: 5em;
  font-size: 125%;
  text-align: center;
}
#installcompilernote {
  display: none;
  font-weight: bold;
}
</style>
<script type="text/javascript">
function forEach(arr, fn) {
  var i;
  for (i = 0; i < arr.length; ++i)
    fn.apply(arr[i]);
}
window.onload = function() {
  ci_nav_list.length = 0;
  forEach (ci_nav.getElementsByTagName("a"), function() {
    this.tabIndex = 1000;
    if (this.hash != "") {
      var list = this.parentNode == ci_nav_list ? ci_nav_list : null;
      if (list)
        list[list.length++] = this;
      this.onclick = function() {
        if (list) {
          forEach (list.getElementsByTagName("a"), function() {
            this.className = "";
          })
          this.className = "current";
        }
        event.returnValue = switchPage(this.hash.substr(1));
      }
    }
  })
}
function initOptions(curName, curVer, defType, newVer, instDir, smFolder, is64) {
  var opt;
  var warn;
  var types = {Unicode: "Unicode 32-bit", ANSI: "ANSI 32-bit", x64: "Unicode 64-bit"};
  var defTypeName = types[defType];
  if (curName == "AutoHotkey") {
    start_intro.innerText = curName + " v" + curVer + " is installed. What do you want to do?";
    var uniType = is64 ? "x64" : "Unicode";
    var uniTypeName = types[uniType];
    opt = [
      "ahk://Upgrade/ANSI", "Upgrade to v" + newVer + " (" + types.ANSI + ")", "Recommended for compatibility.",
      "ahk://Upgrade/" + uniType, "Upgrade to v" + newVer + " (" + uniTypeName + ")", "",
      "ahk://Customize/", "Custom Installation", ""
    ];
    warn = '<strong>Note:</strong> Some AutoHotkey scripts are <a href="ahk://ViewHelp//docs/Compat.htm">not compatible</a> with AutoHotkey_L.';
  } else if (curName == "") {
    start_intro.innerText = "Please select the type of installation you wish to perform.";
    opt = [
      "ahk://QuickInstall/", "Standard Installation", "Default version: " + defTypeName + "<br>Install in: " + instDir,
      "ahk://Customize/", "Custom Installation", ""
    ];
  } else if (curVer != newVer) {
    start_intro.innerText = curName + " v" + curVer + " (" + defTypeName + ") is installed. What do you want to do?";
    opt = [
      "ahk://Upgrade/" + defType, (curVer < newVer ? "Upgrade" : "Downgrade") + " to v" + newVer + " (" + defTypeName + ")", "",
      "ahk://Customize/", "Custom Installation", ""
    ];
  } else {
    start_intro.innerText = curName + " v" + curVer + " (" + defTypeName + ") is installed. What do you want to do?";
    opt = [
      "ahk://QuickInstall/", "Repair", "",
      "ahk://Customize/", "Modify", "",
      "ahk://Uninstall/", "Uninstall", ""
    ];
  }
  var i, html = [];
  for (i = 0; i < opt.length; i += 3) {
    html.push('<a href="', opt[i], '" id="opt', Math.floor(i/3)+1, '"><span>', opt[i+1], '</span>');
    if (opt[i+2])
      html.push('<p>', opt[i+2], '</p>');
    html.push('<div class="marker">\u00BB</div></a>');
  }
  start_options.innerHTML = html.join("");
  start_warning.innerHTML = warn;
  start_warning.style.display = warn ? "block" : "none";
  start_nav.innerHTML = '<em style="text-align:right;width:100%">version ' + newVer + '</em>';
  installtype.value = defType;
  installdir.value = instDir;
  startmenu.value = smFolder;
  startmenu.onblur();
  forEach (document.getElementsByTagName("a"), function() {
    if (/*this.className == "button" ||*/ this.parentNode.className == "options")
      this.hideFocus = true;
  })
}
document.onselectstart =
document.oncontextmenu =
document.ondragstart =
  function() {
    return window.event && event.srcElement.tagName == "INPUT" || false;
  };
function setInstallType(type) {
  installtype.value = type;
  ci_nav_list[1].click();
  event.returnValue = false;
}
function switchPage(page) {
  page = document.getElementById(page);
  if (page.id == "start")
    ci_nav_list[0].click();
  for (var n = page.parentNode.firstChild; n; n = n.nextSibling) if (n.className == "page") {
    if (n != page)
      n.style.display = "none";
    else
      n.style.display = "block";
  }
  var f;
  switch (page.id) {
  case "custom-install":
  case "ci_version":  f = "it_" + installtype.value; break;
  case "ci_location": f = "next-button"; break;
  case "ci_options":  f = "install_button"; break;
  case "done":        f = "done_exit"; break;
  }
  if (f) {
    // If page == ci_version, it mightn't actually be visible at this point,
    // which causes IE7 (and perhaps older) to throw error 0x80020101.
    try { document.getElementById(f).focus() } catch (ex) { }
  }
  return false;
}
function beforeCustomInstall() {
  if (startmenu.style.color == '#888')
    startmenu.value = '';
}
</script>
</head><body>

<div class="page" id="start">
  <h1>AutoHotkey_L Setup</h1>
  <div class="nav" id="start_nav">&nbsp;</div>
  <p id="start_intro"></p>
  <div class="warning" id="start_warning"></div>
  <div class="options" id="start_options"></div>
  <div class="license">AutoHotkey_L is open source software: <a href="ahk://ReadLicense/">read license</a></div>
</div>

<div class="page" id="custom-install">
  <h1>AutoHotkey_L Setup</h1>
  <div class="nav" id="ci_nav">
    <a href="#start">start</a> &#187;
    <span id="ci_nav_list">
      <a href="#ci_version">version</a> &#187;
      <a href="#ci_location">location</a> &#187;
      <a href="#ci_options">options</a> &#187;
    </span>
    <a id="ci_nav_install" href="ahk://CustomInstall/" onclick="beforeCustomInstall()">install</a>
  </div>
  <div class="pager" id="ci_pager">
    <div class="page" id="ci_version">
      <p>Which version of AutoHotkey_L should run by default?</p>
      <input type="hidden" id="installtype">
      <div class="options">
        <a href="#" id="it_Unicode" onclick="setInstallType('Unicode')" tabindex="1">Unicode 32-bit
          <p>Recommended for new installations/scripts.</p> <div class="marker">&#187;</div></a>
        <a href="#" id="it_x64" onclick="setInstallType('x64')" tabindex="2">Unicode 64-bit
          <p>Faster, but compiled scripts won't run on 32-bit systems.</p> <div class="marker">&#187;</div></a>
        <a href="#" id="it_ANSI" onclick="setInstallType('ANSI')" tabindex="3">ANSI 32-bit
          <p>Better compatibility with some legacy scripts.</p> <div class="marker">&#187;</div></a>
      </div>
    </div>
    <div class="page" id="ci_location">
      <label for="installdir" class="indent">Install location:<br>
      <input type="text" class="textbox" id="installdir" value="C:\Program Files\AutoHotkey" tabindex="11"> <a href="ahk://SelectFolder/installdir,Select the folder to install AutoHotkey in." id="installdir_browse" class="button" tabindex="12">Browse</a></label><br>
      <label for="startmenu" class="indent"> Create shortcuts in the following Start menu folder:<br>
      <input type="text" class="textbox" id="startmenu" value="AutoHotkey" tabindex="13"
        onfocus="if(style.color=='#888') value='', style.color=''"
        onblur="if(value=='') value='(don\'t create shortcuts)', style.color='#888'"
        >
      <a href="#" onclick="startmenu.value=''; startmenu.onblur(); return false" id="startmenu_del" class="button" style="color:red" tabindex="14">X</a>
      </label><br>
      <a href="#" id="next-button" class="button" onclick="ci_nav_list[2].click(); return false;" tabindex="15">Next</a>
    </div>
    <div class="page" id="ci_options">
      <label for="installcompiler"><input type="checkbox" id="installcompiler" checked="checked"> Install script compiler
        <p>Installs Ahk2Exe, a tool to convert any .ahk script into a stand-alone EXE.<br>
        Also adds a "Compile" option to .ahk context menus.</p>
        <p id="installcompilernote">Download and re-run the installer to reinstall Ahk2Exe.</p></label>
      <label for="enabledragdrop"><input type="checkbox" id="enabledragdrop" checked="checked"> Enable drag &amp; drop
        <p>Files dropped onto a .ahk script will launch that script (the files will be passed as parameters).  This can lead to accidental launching so some users may wish to disable it.</p></label>
      <label for="separatebuttons"><input type="checkbox" id="separatebuttons"> Separate taskbar buttons
        <p>Controls how taskbar buttons of AutoHotkey scripts are grouped.<br>
        <strong>On:</strong> Each script is separate, but pinning is disabled.<br>
        <strong>Off:</strong> All scripts are grouped together.</p></label>
      <a href="ahk://CustomInstall/" onclick="beforeCustomInstall()" id="install_button" class="button">Install</a>
    </div>
  </div>
</div>

<div class="page" id="wait">
  <h1>AutoHotkey_L Setup</h1>
  <div class="nav">&nbsp;</div>
  <p style="color: #999; font-size: 120%; text-align: center; margin-top: 5em">this shouldn't take long...</p>
  <p style="text-align: center" id="install_status"></p>
</div>

<div class="page" id="done">
  <h1>AutoHotkey_L Setup</h1>
  <div class="nav">&nbsp;</div>
  <p>Installation complete.</p>
  <div class="options">
    <a href="ahk://ViewHelp//docs/AHKL_ChangeLog.htm">View Changes &amp; New Features</a>
    <a href="ahk://ViewHelp//docs/Tutorial.htm">View the Tutorial</a>
    <a href="ahk://RunAutoHotkey/">Run AutoHotkey</a>
    <a href="ahk://Quit/" id="done_exit">Exit</a>
  </div>
</div>

</body></html>